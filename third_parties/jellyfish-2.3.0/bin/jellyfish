#! /bin/sh

# bin/jellyfish - temporary wrapper script for .libs/jellyfish
# Generated by libtool (GNU libtool) 2.4.6 Debian-2.4.6-2
#
# The bin/jellyfish program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of the build directory.
# If it is, it will not operate correctly.

# Sed substitution that helps us do robust quoting.  It backslashifies
# metacharacters that are still active within double-quoted strings.
sed_quote_subst='s|\([`"$\\]\)|\\\1|g'

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac
fi
BIN_SH=xpg4; export BIN_SH # for Tru64
DUALCASE=1; export DUALCASE # for MKS sh

# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

relink_command="(cd /datahome/datasets/ericteam/csjxiao/Applications/Pangaea/third_parties/jellyfish-2.3.0; LIBRARY_PATH=/home/comp/zmzhang/software/expat-2.4.1_install/lib:/home/comp/zmzhang/software/lib:/home/comp/zmzhang/software/bzip2_install/lib:/home/comp/zmzhang/software/openmpi-4.1.1_install/lib:/home/comp/zmzhang/software/gsl-2.6_install/lib:/home/comp/zmzhang/software/boost_1_73_0_install/lib:/home/comp/zmzhang/software/sparsehash_install/lib:/home/comp/zmzhang/software/zlib-1.2.11_install/lib:/home/comp/zmzhang/software/arpack-ng-3.8.0_install/lib:/home/comp/zmzhang/software/htslib_install/lib:/home/comp/zmzhang/software/deflate/lib:; export LIBRARY_PATH; { test -z \"\${COMPILER_PATH+set}\" || unset COMPILER_PATH || { COMPILER_PATH=; export COMPILER_PATH; }; }; { test -z \"\${GCC_EXEC_PREFIX+set}\" || unset GCC_EXEC_PREFIX || { GCC_EXEC_PREFIX=; export GCC_EXEC_PREFIX; }; }; { test -z \"\${LD_RUN_PATH+set}\" || unset LD_RUN_PATH || { LD_RUN_PATH=; export LD_RUN_PATH; }; }; LD_LIBRARY_PATH=/home/comp/zmzhang/software/expat-2.4.1_install/lib:/home/comp/zmzhang/software/lib:/home/comp/zmzhang/software/bzip2_install/lib:/home/comp/zmzhang/software/openmpi-4.1.1_install/lib:/home/comp/zmzhang/software/gsl-2.6_install/lib:/home/comp/zmzhang/software/boost_1_73_0_install/lib:/home/comp/zmzhang/software/sparsehash_install/lib:/home/comp/zmzhang/software/zlib-1.2.11_install/lib:/home/comp/zmzhang/software/arpack-ng-3.8.0_install/lib:/home/comp/zmzhang/software/htslib_install/lib:/home/comp/zmzhang/software/deflate/lib:/opt/hadoop/lib/native/:/usr/lib64/openmpi/lib:/usr/local/lib:/home/comp/zmzhang/software/gurobi1001/linux64/lib; export LD_LIBRARY_PATH; PATH=\"/home/comp/csjxiao/Applications/bin:/datahome/datasets/ericteam/csjxiao/Project/Pangaea_LR:/home/comp/csjxiao/.local/bin:/home/comp/csjxiao/bin:/home/comp/zmzhang/software/orfm-0.7.1_Linux_x86_64:/home/comp/zmzhang/software/LRBinner:~/software/NECAT/Linux-amd64/bin:/home/comp/zmzhang/software/freebayes-1.3.4/scripts:/home/comp/zmzhang/software/expat-2.4.1_install/bin:/home/comp/zmzhang/metacomp/pipeline:/home/comp/zmzhang/software/METAMVGL:/home/comp/zmzhang/software/MetaCarvel:/home/comp/zmzhang/software/centrifuge-1.0.3-beta:/home/comp/zmzhang/software/ANIcalculator_v1:/home/comp/zmzhang/software/bbmap:/home/comp/zmzhang/software/wgs-8.3rc2/Linux-amd64:/home/comp/zmzhang/software/CAP3:/home/comp/zmzhang/software/MIX-master/bin:/home/comp/zmzhang/software/CISA1.3:/home/comp/zmzhang/software/Metassembler/Metassembler/bin:/home/comp/zmzhang/software/quickmerge-0.3:/home/comp/zmzhang/software/quickmerge-0.3/MUMmer3.23:/home/comp/zmzhang/LRTK:/home/comp/zmzhang/code/Barcode_Clustering/cpptools:/home/comp/zmzhang/code/Barcode_Clustering:/home/comp/zmzhang/software/DACE/bin:/home/comp/zmzhang/software/bzip2_install/bin:/home/comp/zmzhang/software/openmpi-4.1.1_install/bin:/home/comp/zmzhang/software/TOSS:/home/comp/zmzhang/software/SEED/SEED:/home/comp/zmzhang/software/OGRE:/home/comp/zmzhang/software/MetaBCC-LR-2.0.0:/home/comp/zmzhang/software/mash-Linux64-v2.3:/home/comp/zmzhang/software/DBG2OLC/utility:/home/comp/zmzhang/software/DBG2OLC/compiled:/home/comp/zmzhang/software/HAPDeNovo/src:/home/comp/zmzhang/software/SPAdes-3.15.3-Linux/bin:/home/comp/zmzhang/software/quast-5.0.2:/home/comp/zmzhang/software/OPERA-LG/bin:/home/comp/zmzhang/software/supernova/supernova-2.1.1:/home/comp/zmzhang/software/bin:/home/comp/zmzhang/software/dsk/build/bin:/home/comp/zmzhang/software/MetaBCC-LR:/home/comp/zmzhang/software/MetaProbS/Release:/home/comp/zmzhang/software/longranger-2.2.2:/home/comp/zmzhang/software/fasttreeMP:/home/comp/zmzhang/software/usearch:/home/comp/zmzhang/software/diamond-linux64:/home/comp/zmzhang/software/METAMVGL:/home/comp/zmzhang/software/GraphBin2:/home/comp/zmzhang/software/gfa1/misc:/home/comp/zmzhang/software/GraphBin_New/support:/home/comp/zmzhang/software/GraphBin_New:/home/comp/zmzhang/software/kraken2-2.1.2_install:/home/comp/zmzhang/software/gsl-2.6_install/bin:/home/comp/zmzhang/software/bwa-0.7.17:/home/comp/zmzhang/software/arpack-ng-3.8.0_install/bin:/home/comp/zmzhang/software/htslib_install/bin:/home/comp/zmzhang/software/anaconda3/bin/libfabric:/home/comp/zmzhang/.local/bin:/home/comp/csjxiao/.conda/envs/pangaea/bin:/home/comp/zmzhang/software/anaconda3/condabin:/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/opt/hadoop/sbin:/opt/hadoop/bin:/opt/zookeeper/bin:/opt/hbase/bin:/opt/hive/bin:/opt/sqoop/bin:/opt/gradle/bin:/opt/spark/bin:/home/comp/zmzhang/software/anaconda3/cmake-bin/bin:/home/comp/zmzhang/software/gurobi1001/linux64/bin:/home/comp/zmzhang/software/anaconda3/cmake-bin/bin\"; export PATH; g++ -std=c++11 -g -O2 -pthread -o \$progdir/\$file sub_commands/jellyfish.o sub_commands/count_main.o sub_commands/info_main.o sub_commands/dump_main.o sub_commands/histo_main.o sub_commands/stats_main.o sub_commands/merge_main.o sub_commands/bc_main.o sub_commands/query_main.o sub_commands/cite_main.o sub_commands/mem_main.o jellyfish/merge_files.o  ./.libs/libjellyfish-2.0.so -pthread -Wl,-rpath -Wl,/datahome/datasets/ericteam/csjxiao/Applications/Pangaea/third_parties/jellyfish-2.3.0/.libs -Wl,-rpath -Wl,/datahome/datasets/ericteam/csjxiao/Applications/Pangaea/third_parties/jellyfish-2.3.0/../jellyfish_pkg/lib)"

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variables:
  generated_by_libtool_version='2.4.6'
  notinst_deplibs=' libjellyfish-2.0.la'
else
  # When we are sourced in execute mode, $file and $ECHO are already set.
  if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
    file="$0"

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}
    ECHO="printf %s\\n"
  fi

# Very basic option parsing. These options are (a) specific to
# the libtool wrapper, (b) are identical between the wrapper
# /script/ and the wrapper /executable/ that is used only on
# windows platforms, and (c) all begin with the string --lt-
# (application programs are unlikely to have options that match
# this pattern).
#
# There are only two supported options: --lt-debug and
# --lt-dump-script. There is, deliberately, no --lt-help.
#
# The first argument to this parsing function should be the
# script's ./libtool value, followed by no.
lt_option_debug=
func_parse_lt_options ()
{
  lt_script_arg0=$0
  shift
  for lt_opt
  do
    case "$lt_opt" in
    --lt-debug) lt_option_debug=1 ;;
    --lt-dump-script)
        lt_dump_D=`$ECHO "X$lt_script_arg0" | /usr/bin/sed -e 's/^X//' -e 's%/[^/]*$%%'`
        test "X$lt_dump_D" = "X$lt_script_arg0" && lt_dump_D=.
        lt_dump_F=`$ECHO "X$lt_script_arg0" | /usr/bin/sed -e 's/^X//' -e 's%^.*/%%'`
        cat "$lt_dump_D/$lt_dump_F"
        exit 0
      ;;
    --lt-*)
        $ECHO "Unrecognized --lt- option: '$lt_opt'" 1>&2
        exit 1
      ;;
    esac
  done

  # Print the debug banner immediately:
  if test -n "$lt_option_debug"; then
    echo "jellyfish:bin/jellyfish:$LINENO: libtool wrapper (GNU libtool) 2.4.6 Debian-2.4.6-2" 1>&2
  fi
}

# Used when --lt-debug. Prints its arguments to stdout
# (redirection is the responsibility of the caller)
func_lt_dump_args ()
{
  lt_dump_args_N=1;
  for lt_arg
  do
    $ECHO "jellyfish:bin/jellyfish:$LINENO: newargv[$lt_dump_args_N]: $lt_arg"
    lt_dump_args_N=`expr $lt_dump_args_N + 1`
  done
}

# Core function for launching the target application
func_exec_program_core ()
{

      if test -n "$lt_option_debug"; then
        $ECHO "jellyfish:bin/jellyfish:$LINENO: newargv[0]: $progdir/$program" 1>&2
        func_lt_dump_args ${1+"$@"} 1>&2
      fi
      exec "$progdir/$program" ${1+"$@"}

      $ECHO "$0: cannot exec $program $*" 1>&2
      exit 1
}

# A function to encapsulate launching the target application
# Strips options in the --lt-* namespace from $@ and
# launches target application with the remaining arguments.
func_exec_program ()
{
  case " $* " in
  *\ --lt-*)
    for lt_wr_arg
    do
      case $lt_wr_arg in
      --lt-*) ;;
      *) set x "$@" "$lt_wr_arg"; shift;;
      esac
      shift
    done ;;
  esac
  func_exec_program_core ${1+"$@"}
}

  # Parse options
  func_parse_lt_options "$0" ${1+"$@"}

  # Find the directory that this script lives in.
  thisdir=`$ECHO "$file" | /usr/bin/sed 's%/[^/]*$%%'`
  test "x$thisdir" = "x$file" && thisdir=.

  # Follow symbolic links until we get to the real thisdir.
  file=`ls -ld "$file" | /usr/bin/sed -n 's/.*-> //p'`
  while test -n "$file"; do
    destdir=`$ECHO "$file" | /usr/bin/sed 's%/[^/]*$%%'`

    # If there was a directory component, then change thisdir.
    if test "x$destdir" != "x$file"; then
      case "$destdir" in
      [\\/]* | [A-Za-z]:[\\/]*) thisdir="$destdir" ;;
      *) thisdir="$thisdir/$destdir" ;;
      esac
    fi

    file=`$ECHO "$file" | /usr/bin/sed 's%^.*/%%'`
    file=`ls -ld "$thisdir/$file" | /usr/bin/sed -n 's/.*-> //p'`
  done

  # Usually 'no', except on cygwin/mingw when embedded into
  # the cwrapper.
  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=no
  if test "$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR" = "yes"; then
    # special case for '.'
    if test "$thisdir" = "."; then
      thisdir=`pwd`
    fi
    # remove .libs from thisdir
    case "$thisdir" in
    *[\\/].libs ) thisdir=`$ECHO "$thisdir" | /usr/bin/sed 's%[\\/][^\\/]*$%%'` ;;
    .libs )   thisdir=. ;;
    esac
  fi

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  program=lt-'jellyfish'
  progdir="$thisdir/.libs"

  if test ! -f "$progdir/$program" ||
     { file=`ls -1dt "$progdir/$program" "$progdir/../$program" 2>/dev/null | /usr/bin/sed 1q`; \
       test "X$file" != "X$progdir/$program"; }; then

    file="$$-$program"

    if test ! -d "$progdir"; then
      mkdir "$progdir"
    else
      rm -f "$progdir/$file"
    fi

    # relink executable if necessary
    if test -n "$relink_command"; then
      if relink_command_output=`eval $relink_command 2>&1`; then :
      else
	$ECHO "$relink_command_output" >&2
	rm -f "$progdir/$file"
	exit 1
      fi
    fi

    mv -f "$progdir/$file" "$progdir/$program" 2>/dev/null ||
    { rm -f "$progdir/$program";
      mv -f "$progdir/$file" "$progdir/$program"; }
    rm -f "$progdir/$file"
  fi

  if test -f "$progdir/$program"; then
    if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
      # Run the actual program with our arguments.
      func_exec_program ${1+"$@"}
    fi
  else
    # The program doesn't exist.
    $ECHO "$0: error: '$progdir/$program' does not exist" 1>&2
    $ECHO "This script is just a wrapper for $program." 1>&2
    $ECHO "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi
